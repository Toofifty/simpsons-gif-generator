import {
  Box,
  Button,
  Flex,
  SegmentedControl,
  Stack,
  Text,
  useMantineTheme,
} from '@mantine/core';
import { useState } from 'react';
import { useMediaQuery } from '@mantine/hooks';
import { withTransition } from '../util/with-transition';
import { ClipList } from '../components/browse/clip-list';
import { ClipListByEpisode } from '../components/browse/clip-list-by-episode';

export default () => {
  const [filetype, setFiletype] = useState<'gif' | 'mp4'>('gif');
  const [sort, setSort] = useState<'episode' | 'popular' | 'recent'>('recent');

  const theme = useMantineTheme();
  const isMobile = useMediaQuery(`(max-width: ${theme.breakpoints.md})`);

  return (
    <Box mx="auto" maw="calc(1200px + 6.75rem)">
      <Stack m="xl">
        <Flex
          justify="space-between"
          align="center"
          mb="lg"
          gap="lg"
          direction={isMobile ? 'column' : undefined}
        >
          <Flex direction="column" w="100%" style={{ flexShrink: 1 }}>
            <Text component="h1" size="2rem" my={0}>
              Browse
            </Text>
            <Text size="md" color="dimmed">
              View GIFs and MP4s generated by other users
            </Text>
          </Flex>
          <Flex
            gap="md"
            direction={isMobile ? 'column' : undefined}
            justify={isMobile ? undefined : 'flex-end'}
            w="100%"
          >
            <Flex align="center" justify="space-between" gap="md">
              <Text>Show as</Text>
              <SegmentedControl
                color="blue"
                data={[
                  { label: 'GIFs', value: 'gif' },
                  { label: 'MP4s', value: 'mp4' },
                ]}
                value={filetype}
                onChange={withTransition(setFiletype) as any}
              />
            </Flex>
            <Flex align="center" justify="space-between" gap="md">
              <Text>Sort by</Text>
              <SegmentedControl
                color="blue"
                data={[
                  { label: 'Episode', value: 'episode' },
                  { label: 'Popularity', value: 'popular' },
                  { label: 'Most recent', value: 'recent' },
                ]}
                value={sort}
                onChange={withTransition(setSort) as any}
              />
            </Flex>
          </Flex>
        </Flex>
        {sort === 'episode' ? (
          <ClipListByEpisode filetype={filetype} />
        ) : (
          <ClipList filetype={filetype} sort={sort} />
        )}
      </Stack>
    </Box>
  );
};
