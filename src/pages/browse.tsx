import {
  Box,
  Flex,
  SegmentedControl,
  Stack,
  Text,
  useMantineTheme,
} from '@mantine/core';
import { useState } from 'react';
import { useMediaQuery } from '@mantine/hooks';
import { withTransition } from '../util/with-transition';
import { ClipList } from '../components/browse/clip-list';
import { ClipListByEpisode } from '../components/browse/clip-list-by-episode';
import { Navigate, useNavigate, useParams } from 'react-router-dom';

export default () => {
  const [filetype, setFiletype] = useState<'gif' | 'mp4'>('gif');
  const { sort } = useParams<{
    sort: 'season' | 'popular' | 'recent';
  }>();
  const navigate = useNavigate();

  const theme = useMantineTheme();
  const isMobile = useMediaQuery(`(max-width: ${theme.breakpoints.md})`);

  if (!sort || !['season', 'popular', 'recent'].includes(sort)) {
    return <Navigate to="/browse/recent" replace />;
  }

  return (
    <>
      <style>{`body { overflow-y: scroll; overflow-x: hidden; }`}</style>
      <Box mx="auto" maw="calc(1200px + 6.75rem)">
        <Stack m="xl" mt="0">
          <Flex
            justify="space-between"
            align={isMobile ? 'space-between' : 'center'}
            mb="lg"
            gap="lg"
            direction={isMobile ? 'column' : undefined}
          >
            <Flex direction="column" style={{ flexShrink: 1 }}>
              <Text component="h1" size="2rem" my={0}>
                Browse
              </Text>
              <Text size="md" color="dimmed">
                View GIFs and MP4s generated by other users
              </Text>
            </Flex>
            <Flex
              gap="md"
              direction={isMobile ? 'column' : undefined}
              justify={isMobile ? undefined : 'flex-end'}
            >
              <Flex align="center" justify="space-between" gap="md">
                <Text>Show</Text>
                <SegmentedControl
                  color="blue"
                  data={[
                    { label: 'GIFs', value: 'gif' },
                    { label: 'MP4s', value: 'mp4' },
                  ]}
                  value={filetype}
                  onChange={withTransition(setFiletype) as any}
                />
              </Flex>
              <Flex align="center" justify="space-between" gap="md" wrap="wrap">
                <Text>Sorted by</Text>
                <SegmentedControl
                  w={isMobile ? '100%' : 'auto'}
                  color="blue"
                  data={[
                    { label: 'Episode', value: 'season' },
                    { label: 'Popularity', value: 'popular' },
                    { label: 'Most recent', value: 'recent' },
                  ]}
                  value={sort}
                  onChange={(v) =>
                    navigate(`/browse/${v}`, { viewTransition: true })
                  }
                />
              </Flex>
            </Flex>
          </Flex>
          {sort === 'season' ? (
            <ClipListByEpisode filetype={filetype} />
          ) : (
            <ClipList filetype={filetype} sort={sort} />
          )}
        </Stack>
      </Box>
    </>
  );
};
